package io.vertigo.ai.example.telstra.dao;

import javax.inject.Inject;

import io.vertigo.core.lang.Generated;
import io.vertigo.core.node.Node;
import io.vertigo.datamodel.task.definitions.TaskDefinition;
import io.vertigo.datamodel.task.model.Task;
import io.vertigo.datamodel.task.model.TaskBuilder;
import io.vertigo.datastore.entitystore.EntityStoreManager;
import io.vertigo.datastore.impl.dao.DAO;
import io.vertigo.datastore.impl.dao.StoreServices;
import io.vertigo.datamodel.smarttype.SmartTypeManager;
import io.vertigo.datamodel.task.TaskManager;
import io.vertigo.ai.example.telstra.domain.EventTypeTrain;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class EventTypeTrainDAO extends DAO<EventTypeTrain, java.lang.Long> implements StoreServices {

	/**
	 * Contructeur.
	 * @param entityStoreManager Manager de persistance
	 * @param taskManager Manager de Task
	 * @param smartTypeManager SmartTypeManager
	 */
	@Inject
	public EventTypeTrainDAO(final EntityStoreManager entityStoreManager, final TaskManager taskManager, final SmartTypeManager smartTypeManager) {
		super(EventTypeTrain.class, entityStoreManager, taskManager, smartTypeManager);
	}


	/**
	 * Creates a taskBuilder.
	 * @param name  the name of the task
	 * @return the builder 
	 */
	private static TaskBuilder createTaskBuilder(final String name) {
		final TaskDefinition taskDefinition = Node.getNode().getDefinitionSpace().resolve(name, TaskDefinition.class);
		return Task.builder(taskDefinition);
	}

	/**
	 * Execute la tache TkBulkCreateEventTypeTrain.
	 * @param eventTypeTrainList DtList de EventTypeTrain
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			dataSpace = "train",
			name = "TkBulkCreateEventTypeTrain",
			request = "INSERT INTO EVENT_TYPE_TRAIN (ID, CODE, EVENT_TYPE) values (#eventTypeTrainList.id#, #eventTypeTrainList.code#, #eventTypeTrainList.eventType#)",
			taskEngineClass = io.vertigo.basics.task.TaskEngineProcBatch.class)
	public void bulkCreateEventTypeTrain(@io.vertigo.datamodel.task.proxy.TaskInput(name = "eventTypeTrainList", smartType = "STyDtEventTypeTrain") final io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.example.telstra.domain.EventTypeTrain> eventTypeTrainList) {
		final Task task = createTaskBuilder("TkBulkCreateEventTypeTrain")
				.addValue("eventTypeTrainList", eventTypeTrainList)
				.addContextProperty("connectionName", io.vertigo.datastore.impl.dao.StoreUtil.getConnectionName("train"))
				.build();
		getTaskManager().execute(task);
	}

	/**
	 * Execute la tache TkLoadEventType.
	 * @param eventTypeIds List de Long
	 * @return DtList de EventTypeTrain dtcEventTypeTrain
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkLoadEventType",
			request = "select * from EVENT_TYPE where ID in (#eventTypeIds.rownum#);",
			taskEngineClass = io.vertigo.basics.task.TaskEngineSelect.class)
	@io.vertigo.datamodel.task.proxy.TaskOutput(smartType = "STyDtEventTypeTrain")
	public io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.example.telstra.domain.EventTypeTrain> loadEventType(@io.vertigo.datamodel.task.proxy.TaskInput(name = "eventTypeIds", smartType = "STyId") final java.util.List<Long> eventTypeIds) {
		final Task task = createTaskBuilder("TkLoadEventType")
				.addValue("eventTypeIds", eventTypeIds)
				.build();
		return getTaskManager()
				.execute(task)
				.getResult();
	}

}
