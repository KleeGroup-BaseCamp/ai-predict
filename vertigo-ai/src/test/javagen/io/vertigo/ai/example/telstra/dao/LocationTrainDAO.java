package io.vertigo.ai.example.telstra.dao;

import javax.inject.Inject;

import io.vertigo.core.lang.Generated;
import io.vertigo.core.node.Node;
import io.vertigo.datamodel.task.definitions.TaskDefinition;
import io.vertigo.datamodel.task.model.Task;
import io.vertigo.datamodel.task.model.TaskBuilder;
import io.vertigo.datastore.entitystore.EntityStoreManager;
import io.vertigo.datastore.impl.dao.DAO;
import io.vertigo.datastore.impl.dao.StoreServices;
import io.vertigo.datamodel.smarttype.SmartTypeManager;
import io.vertigo.datamodel.task.TaskManager;
import io.vertigo.ai.example.telstra.domain.LocationTrain;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class LocationTrainDAO extends DAO<LocationTrain, java.lang.Long> implements StoreServices {

	/**
	 * Contructeur.
	 * @param entityStoreManager Manager de persistance
	 * @param taskManager Manager de Task
	 * @param smartTypeManager SmartTypeManager
	 */
	@Inject
	public LocationTrainDAO(final EntityStoreManager entityStoreManager, final TaskManager taskManager, final SmartTypeManager smartTypeManager) {
		super(LocationTrain.class, entityStoreManager, taskManager, smartTypeManager);
	}


	/**
	 * Creates a taskBuilder.
	 * @param name  the name of the task
	 * @return the builder 
	 */
	private static TaskBuilder createTaskBuilder(final String name) {
		final TaskDefinition taskDefinition = Node.getNode().getDefinitionSpace().resolve(name, TaskDefinition.class);
		return Task.builder(taskDefinition);
	}

	/**
	 * Execute la tache TkBulkCreateLocationTrain.
	 * @param locationTrainList DtList de LocationTrain
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			dataSpace = "train",
			name = "TkBulkCreateLocationTrain",
			request = "INSERT INTO LOCATION_TRAIN (ID, CODE, LOCATION, SEVERITY_FAULT) values (#locationTrainList.id#, #locationTrainList.code#, #locationTrainList.location#, #locationTrainList.severityFault#)",
			taskEngineClass = io.vertigo.basics.task.TaskEngineProcBatch.class)
	public void bulkCreateLocationTrain(@io.vertigo.datamodel.task.proxy.TaskInput(name = "locationTrainList", smartType = "STyDtLocationTrain") final io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.example.telstra.domain.LocationTrain> locationTrainList) {
		final Task task = createTaskBuilder("TkBulkCreateLocationTrain")
				.addValue("locationTrainList", locationTrainList)
				.addContextProperty("connectionName", io.vertigo.datastore.impl.dao.StoreUtil.getConnectionName("train"))
				.build();
		getTaskManager().execute(task);
	}

	/**
	 * Execute la tache TkLoadLocation.
	 * @param locationIds List de Long
	 * @return DtList de LocationTrain dtcLocationTrain
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkLoadLocation",
			request = "select * from LOCATION where ID in (#locationIds.rownum#);",
			taskEngineClass = io.vertigo.basics.task.TaskEngineSelect.class)
	@io.vertigo.datamodel.task.proxy.TaskOutput(smartType = "STyDtLocationTrain")
	public io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.example.telstra.domain.LocationTrain> loadLocation(@io.vertigo.datamodel.task.proxy.TaskInput(name = "locationIds", smartType = "STyId") final java.util.List<Long> locationIds) {
		final Task task = createTaskBuilder("TkLoadLocation")
				.addValue("locationIds", locationIds)
				.build();
		return getTaskManager()
				.execute(task)
				.getResult();
	}

}
