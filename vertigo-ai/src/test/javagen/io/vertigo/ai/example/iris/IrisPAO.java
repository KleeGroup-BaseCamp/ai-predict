package io.vertigo.ai.example.iris;

import javax.inject.Inject;

import io.vertigo.core.node.Node;
import io.vertigo.core.lang.Assertion;
import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.task.TaskManager;
import io.vertigo.datamodel.task.definitions.TaskDefinition;
import io.vertigo.datamodel.task.model.Task;
import io.vertigo.datamodel.task.model.TaskBuilder;
import io.vertigo.datastore.impl.dao.StoreServices;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
 @Generated
public final class IrisPAO implements StoreServices {
	private final TaskManager taskManager;

	/**
	 * Constructeur.
	 * @param taskManager Manager des Task
	 */
	@Inject
	public IrisPAO(final TaskManager taskManager) {
		Assertion.check().isNotNull(taskManager);
		//-----
		this.taskManager = taskManager;
	}

	/**
	 * Creates a taskBuilder.
	 * @param name  the name of the task
	 * @return the builder 
	 */
	private static TaskBuilder createTaskBuilder(final String name) {
		final TaskDefinition taskDefinition = Node.getNode().getDefinitionSpace().resolve(name, TaskDefinition.class);
		return Task.builder(taskDefinition);
	}

	/**
	 * Execute la tache TkCreateIris.
	 * @param sepalLength Double
	 * @param sepalWidth Double
	 * @param petalLength Double
	 * @param petalWidth Double
	 * @param variety String
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkCreateIris",
			request = "INSERT INTO IRIS (ID, SEPALLENGHT, SEPALWIDTH, PETALLENGTH, PETALWIDTH, VARIETY) values (nextval('SEQ_EQUIPEMENT'), #sepalLength#, #sepalWidth#, #petalLength#, #petalWidth#, #variety#)",
			taskEngineClass = io.vertigo.basics.task.TaskEngineSelect.class)
	public void createIris(@io.vertigo.datamodel.task.proxy.TaskInput(name = "sepalLength", smartType = "STyDecimal") final Double sepalLength, @io.vertigo.datamodel.task.proxy.TaskInput(name = "sepalWidth", smartType = "STyDecimal") final Double sepalWidth, @io.vertigo.datamodel.task.proxy.TaskInput(name = "petalLength", smartType = "STyDecimal") final Double petalLength, @io.vertigo.datamodel.task.proxy.TaskInput(name = "petalWidth", smartType = "STyDecimal") final Double petalWidth, @io.vertigo.datamodel.task.proxy.TaskInput(name = "variety", smartType = "STyLabel") final String variety) {
		final Task task = createTaskBuilder("TkCreateIris")
				.addValue("sepalLength", sepalLength)
				.addValue("sepalWidth", sepalWidth)
				.addValue("petalLength", petalLength)
				.addValue("petalWidth", petalWidth)
				.addValue("variety", variety)
				.build();
		getTaskManager().execute(task);
	}

	private TaskManager getTaskManager() {
		return taskManager;
	}
}
