package io.vertigo.ai.predict.domain;

import java.util.Arrays;
import java.util.Iterator;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.definitions.DtFieldName;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class DtDefinitions implements Iterable<Class<?>> {

	/**
	 * Enumération des DtDefinitions.
	 */
	public enum Definitions {
		/** Objet de données Explanation. */
		Explanation(io.vertigo.ai.predict.models.Explanation.class),
		/** Objet de données Predict. */
		Predict(io.vertigo.ai.predict.models.Predict.class),
		/** Objet de données PredictResponse. */
		PredictResponse(io.vertigo.ai.predict.models.PredictResponse.class)		;

		private final Class<?> clazz;

		private Definitions(final Class<?> clazz) {
			this.clazz = clazz;
		}

		/** 
		 * Classe associée.
		 * @return Class d'implémentation de l'objet 
		 */
		public Class<?> getDtClass() {
			return clazz;
		}
	}

	/**
	 * Enumération des champs de Explanation.
	 */
	public enum ExplanationFields implements DtFieldName<io.vertigo.ai.predict.models.Explanation> {
		/** Propriété 'Feature Explanation'. */
		explainFeature	}

	/**
	 * Enumération des champs de Predict.
	 */
	public enum PredictFields implements DtFieldName<io.vertigo.ai.predict.models.Predict> {
		/** Propriété 'Prediction Label'. */
		predictionLabel,
		/** Propriété 'Numeric Prediction'. */
		predictionNumeric,
		/** Propriété 'Prediction Probability'. */
		predictionProba,
		/** Propriété 'Explanation'. */
		explanation	}

	/**
	 * Enumération des champs de PredictResponse.
	 */
	public enum PredictResponseFields implements DtFieldName<io.vertigo.ai.predict.models.PredictResponse> {
		/** Propriété 'Prediction list'. */
		predictionList	}

	/** {@inheritDoc} */
	@Override
	public Iterator<Class<?>> iterator() {
		return new Iterator<>() {
			private Iterator<Definitions> it = Arrays.asList(Definitions.values()).iterator();

			/** {@inheritDoc} */
			@Override
			public boolean hasNext() {
				return it.hasNext();
			}

			/** {@inheritDoc} */
			@Override
			public Class<?> next() {
				return it.next().getDtClass();
			}
		};
	}
}
