package io.vertigo.ai.server.models;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.model.DtObject;
import io.vertigo.datamodel.structure.stereotype.Field;
import io.vertigo.datamodel.structure.util.DtObjectUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class Predict implements DtObject {
	private static final long serialVersionUID = 1L;

	private String predictionLabel;
	private java.math.BigDecimal predictionNumeric;
	private java.util.List<java.math.BigDecimal> predictionNVector = new java.util.ArrayList<>();
	private io.vertigo.ai.server.models.Explanation explantion1D;
	private io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.server.models.Explanation> explantion2D =  new io.vertigo.datamodel.structure.model.DtList<>(io.vertigo.ai.server.models.Explanation.class);
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Prediction Label'.
	 * @return String predictionLabel <b>Obligatoire</b>
	 */
	@Field(smartType = "STyStringAIResponse", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Prediction Label")
	public String getPredictionLabel() {
		return predictionLabel;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Prediction Label'.
	 * @param predictionLabel String <b>Obligatoire</b>
	 */
	public void setPredictionLabel(final String predictionLabel) {
		this.predictionLabel = predictionLabel;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Prediction Numeric'.
	 * @return BigDecimal predictionNumeric <b>Obligatoire</b>
	 */
	@Field(smartType = "STyDecimalAIResponse", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Prediction Numeric")
	public java.math.BigDecimal getPredictionNumeric() {
		return predictionNumeric;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Prediction Numeric'.
	 * @param predictionNumeric BigDecimal <b>Obligatoire</b>
	 */
	public void setPredictionNumeric(final java.math.BigDecimal predictionNumeric) {
		this.predictionNumeric = predictionNumeric;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Prediction Vector'.
	 * @return List de BigDecimal predictionNVector
	 */
	@Field(smartType = "STyDecimalAIResponse", cardinality = io.vertigo.core.lang.Cardinality.MANY, label = "Prediction Vector")
	public java.util.List<java.math.BigDecimal> getPredictionNVector() {
		return predictionNVector;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Prediction Vector'.
	 * @param predictionNVector List de BigDecimal
	 */
	public void setPredictionNVector(final java.util.List<java.math.BigDecimal> predictionNVector) {
		io.vertigo.core.lang.Assertion.check().isNotNull(predictionNVector);
		//---
		this.predictionNVector = predictionNVector;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Exploration 1D'.
	 * @return Explanation explantion1D <b>Obligatoire</b>
	 */
	@Field(smartType = "STyDtExplanation", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Exploration 1D")
	public io.vertigo.ai.server.models.Explanation getExplantion1D() {
		return explantion1D;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Exploration 1D'.
	 * @param explantion1D Explanation <b>Obligatoire</b>
	 */
	public void setExplantion1D(final io.vertigo.ai.server.models.Explanation explantion1D) {
		this.explantion1D = explantion1D;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Exploration 2D'.
	 * @return DtList de Explanation explantion2D
	 */
	@Field(smartType = "STyDtExplanation", cardinality = io.vertigo.core.lang.Cardinality.MANY, label = "Exploration 2D")
	public io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.server.models.Explanation> getExplantion2D() {
		return explantion2D;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Exploration 2D'.
	 * @param explantion2D DtList de Explanation
	 */
	public void setExplantion2D(final io.vertigo.datamodel.structure.model.DtList<io.vertigo.ai.server.models.Explanation> explantion2D) {
		io.vertigo.core.lang.Assertion.check().isNotNull(explantion2D);
		//---
		this.explantion2D = explantion2D;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
